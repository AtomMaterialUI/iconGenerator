###

PRIMARY CONFIGURATION FILE
==========================

icon:      An icon defined in `icons.less`.

colour:    Optional icon colour. Must match one of the colour names defined in `colours.less`.

match:     Pattern(s) to match against the filename. This may be a string, an array, or a regular expression.

           String:
               If passed a string, it's used to match the file's extension case-insensitively.
               Therefore, passing ".json" is functionally equivalent to /\.json$/i, but spares
               an author the tedium of writing out the latter. Regex characters are escaped so
               names like ".c++" don't require backslashes (no need for ".c\+\+")

           Array:
               If passed an array, it's used to provide multiple colour variants for different
               filenames/extensions. Each value is expected to be an array containing:

                   0. Path-matching pattern (required)
                   1. Colour name
                   2. Additional properties, expressed as either an object literal or a string.
                      Strings are treated as shorthand for setting alias, scope and interpreter
                      properties to the same value.

               Most contributors will only need to touch the first two elements.

priority:  More than one pattern may match a filename. To ensure more specific patterns aren't overridden
           by more general patterns, set the priority index to a value greater than 1. This property is
           optional and defaults to 1 if omitted.



ADVANCED PROPERTIES
-------------------
These are chiefly of interest only to the package's maintainers.

alias:        There may be more than one way to write a language's name. For example, C++ may be referred to as
              "cpp", C# as "csharp" or "c sharp", and so on. This property exists so modelines and .gitattributes
              will match any of a language's acceptable names. It may be expressed as either a single string (case
              insensitive), or a regular expression.

generic:      Instructs the service not to use the rule's name as a language alias.

scope:        Name of any TextMate grammars which trigger the icon when overriding a file's grammar. This may be
              a string or regex; if provided the former, it's used to construct a case-insensitive pattern that's
              checked against the end of the string (e.g., "js" will be treated as if /\.js$/i were written). Not
              every grammar will/should change an icon, especially for very generic formats like JSON or YAML.

interpreter:  Program name(s) to look for in hashbang lines. This may be a string or a regular expression, both
              of which are matched against the program's name, instead of the entire hashbang line. E.g., /python/
              will be tested against "python2", not "#!/usr/local/bin/python2". Matching is case-sensitive, and
              strings are not converted into regular expressions the way other options are. Ergo, /python/ will
              match "python2" but "python" would not.

signature:    RegExp (not string) to match file signatures (aka, "magic numbers"). This is done as a last resort
              when no paths are matched. Note the binary icon is always shown for files that contain null bytes.

matchPath:    By default, matching is done using a file or directory's basename. Setting matchPath instructs the
              service to match against an entity's full system-path instead. If the rule's match-pattern was supplied
              as a string, its path separators are expanded to match both Windows and POSIX-style delimiters. That is,
              "node_modules/.bin" becomes the same as writing /node_modules[\/\\]\.bin$/i.

noSuffix:     By default, icon names are suffixed with "-icon". Set noSuffix to true if you need to specify an
              icon class in its entirety (such as a default Atom icon). This should otherwise rarely be used.



RESERVED FOR FUTURE USE
-----------------------

mime:  A MIME Content-Type string of the form detailed in RFC 2231 §5.

uses:  A loosely-defined "parent" from which to inherit properties not defined by the entry. Intended to
       address the longstanding problem of config/case-specific icons being replaced by a less qualified
       icon. For example, the file "app-test.js" should display the `test-js` icon even when it contains
       a modeline or interpreter directive. Currently, this isn't the case.
###



fileIcons:

	D3:
		icon: "d3"
		priority: 2
		match: /^d3(\.v\d+)?[^.]*\.[cm]?js$/i
		colour: "medium-orange"

	Danmakufu:
		icon: "yang"
		scope: "danmakufu"
		match: ".dnh"
		colour: "medium-red"

	"Darcs Patch":
		icon: "darcs"
		match: [
			[/\.d(arcs)?patch$/i, "medium-green"]
			[/^\.boringignore$/i, "dark-green"]
		]

	Dashboard:
		icon: "dashboard"
		generic: true
		match: [
			[/\.s[kl]im$/i, "medium-orange", "slim"]
			[".cpuprofile", "medium-green"]
			[".cloc", "medium-blue"]
		]

	Data:
		icon: "database"
		generic: true
		match: [
			[".hson", "medium-orange", "hson"]
			[".http", "medium-red"]
			[".ndjson", "medium-orange"]
			[".fea", "light-blue", scope: "opentype", alias: "afdko"]
			[".json.eex", "medium-purple"]
			[/\.(proto|protote?xt|pbte?xt)$/i, "dark-cyan", scope: "protobuf", alias: /^(protobuf|Protocol\s*Buffers?)(\s*text)?$/i]
			[".pytb", "medium-orange", scope: "python.traceback"]
			[".pydeps", "dark-blue"]
			[/\.pot?$/i, "medium-red"]
			[".ejson", "dark-red"]
			[".edn", "medium-purple"]
			[".eam.fs", "dark-purple"]
			[".son", "dark-green", "son"]
			[".ston", "medium-maroon"]
			[".ttl", "medium-cyan", scope: "turtle"]
			[".sy", "dark-green"]
			[".syntax", "medium-blue"]
			[".webmanifest", "medium-blue"]
			[/\.snip(pets?)?$/i, "medium-green", alias: /^(SnipMate|UltiSnip|NeoSnippet)$/i, scope: /\.(vim-snippet|snipmate|ultisnips|neosnippet|snippets?)(\.|$)/i]
			[/\.yas(nippet)?$/i, "medium-green", alias: /(YA)?Snippet/i, scope: /^source\.yasnippet$/i]
			[/(^|\.)fonts\.(dir|scale|alias)$/i, "medium-red", scope: /^source\.fontdir$/i, priority: 4]
			[/(^|\.)encodings\.dir$/i, "medium-orange"]
			[/^pkginfo$/i, "medium-blue"]
			[/^term(cap|info)/i, "dark-green", priority: 0.5]
			[/^(birthtoken|flowers)$/, "medium-green", priority: 0.5, scope: /^source\.generic-db$/]
			[/(\\|\/)share(?:\1misc)?\1(?:ascii|trace\.codes)$/, "medium-red", matchPath: true]
			[/^(mime\.types|fstab)$/i, "medium-maroon"]
			[/^METADATA\.pb$/, "medium-red", priority: 2]
			[/\.(ldj|ldjson|jsonl)$/, "dark-orange", "jsonl"]
			[/\.(irb-history|lesshst)$/i, "medium-red"]
			[/^(magic\.mgc|figmagic)$/i, "medium-purple", signature: /^\xF1\x1E\x04\x1C|^\x1C\x04\x1E\xF1/]
			[/[\/\\](?:magic[\/\\]Magdir|file[\/\\]magic)[\/\\][-.\w]+$/i, "dark-red", matchPath: true]
			[/(\\|\/)dev[-\w]+\1(?:[^\\\/]+\1)*(?!DESC|NOTES)(?:[A-Z][-A-Z]*)(?:\.in)?$/, "medium-green", matchPath: true]
			[///
				/tab\.(37|450-12|450|lp|think)$
				|
				/dev[-\w]+/(APL\.bug|[A-Z][-A-Za-z0-9]*)(\.fd)?$
			///i, "medium-green", matchPath: true, priority: 0.75]
			[/\.ssh[\/\\](authorized_keys|known_hosts)$/, "medium-green", matchPath: true]
			[/^\.icondb\.js$/, "dark-red", priority: 1.5]
			[/\.git[\/\\](.*[\/\\])?(HEAD|ORIG_HEAD|packed-refs|logs[\/\\](.+[\/\\])?[^\/\\]+)$/, "medium-red",
				priority: 2,
				matchPath: true]
		]

	DataWeave:
		icon: "dataweave"
		match: ".dwl"
		colour: "auto-blue"
		scope: /\.data-?weave/

	dBASE:
		icon: "dbase"
		match: ".dbf"
		colour: "medium-red"

	Debian:
		icon: "debian"
		match: [
			[".deb", "medium-red"]
			[/(^|\.)(control|dsc)$/, "dark-cyan", scope: "deb-control"]
			[/^rules$/, "medium-cyan"]
		]

	"D★Mark":
		icon: "icon-star"
		match: ".dmark"
		colour: "dark-red"
		alias: /^d[_\W]?mark$/i
		noSuffix: true

	DevContainer:
		icon: "devcontainer"
		match: /^devcontainer\.json$/i
		colour: "medium-blue"
		priority: 2

	DeviceTree:
		icon: "devicetree"
		match: [
			[".dts", "medium-purple", scope: "dts", alias: "DeviceTree Source"]
			[".dtsi", "medium-orange"]
		]

	Dhall:
		icon: "dhall"
		match: ".dhall"
		colour: "dark-grey"
		scope: ".dhall"

	Dia:
		icon: "dia"
		match: ".dia"
		colour: "auto-cyan"

	Digdag:
		icon: "digdag"
		match: ".dig"
		colour: "medium-orange"
		uses: "YAML"

	Ditroff:
		icon: "binary"
		match: /\.dit(roff)?$/i
		colour: "dark-green"
		scope: "source.ditroff"
		signature: /^x\s*T\s+(dvi|html|lbp|lj4|ps|post|pdf|ascii|cp1047|latin1|utf8|X75|X75-12|X100|X100-12)(?=\s|$)/

	"DNS Zone / CNAME":
		icon: "earth"
		match: [
			[".zone", "medium-blue"]
			[".arpa", "medium-green"]
			[/^CNAME$/, "dark-blue"]
		]

	DocBook:
		icon: "docbook"
		match: /\.(dbk|docbook)$/i
		colour: "medium-cyan"
		mime: "application/docbook+xml"
		uses: "XML"

	Doclets:
		icon: "doclets"
		priority: 2
		match: /\.doclets\.ya?ml$/i
		colour: ["light-green", "medium-green"]

	DocPad:
		icon: "docpad"
		match: ".eco"
		colour: "medium-maroon"
		scope: "eco"

	Docz:
		icon: "docz"
		priority: 2
		match: [
			[/(^|\.)docz(rc)?(\.config)?\.[cm]?js$/i, "auto-yellow"]
			[/(^|\.)docz(rc)?(\.config)?\.json$/i, "auto-orange"]
		]

	Dogescript:
		icon: "doge"
		priority: 0 # Not much wow
		match: ".djs"
		colour: "medium-yellow"
		scope: "dogescript"

	Dojo:
		icon: "dojo"
		priority: 2
		match: /^dojo\.[cm]?js$/i
		colour: "light-red"

	DOSBox:
		icon: "dosbox"
		match: /^dosbox(\b|_).*(\.conf|pref\w*)$/i
		colour: "medium-orange"

	"doT.js":
		icon: "dotjs"
		priority: 0.9 # Hack to avoid conflict with GraphViz, but allow scope association
		uses: "HTML"
		match: [
			[".dot", "medium-blue", "dotjs"]
		]

	Download:
		icon: "download"
		match: ".crdownload"
		colour: "dark-blue"
		priority: 0.5

	Dragula:
		icon: "dragula"
		priority: 2
		match: /^dragula(\.min)?\.([cm]?js|css)$/i
		colour: "dark-purple"

	Drone:
		icon: "drone"
		priority: 2
		match: /\.drone\.ya?ml$/i
		colour: "medium-cyan"

	"Dyalog APL":
		icon: "dyalog"
		uses: "APL"
		match: [
			[".dyalog", "medium-orange", interpreter: "dyalog"]
			[".dyapp", "medium-red"]
			[".mipage", "dark-green"]
		]

	Eagle:
		icon: "eagle"
		match: ".eup"
		colour: "medium-red"
		scope: "eagle"

	EasyBuild:
		icon: "easybuild"
		match: ".eb"
		colour: "dark-blue"

	eC:
		icon: "ec"
		match: [
			[".ec", "dark-blue", "ec"]
			[".eh", "dark-purple"]
		]

	Ecere:
		icon: "ecere"
		match: ".epj"
		colour: "medium-blue"

	ECLiPSe:
		icon: "eclipse-lang"
		priority: 1.5
		match: /\.ecl(\.txt)?$/i
		colour: "medium-blue"
		scope: "eclipse"

	Electron:
		icon: "electron"
		match: /\.compilerc(\.json)?$/i
		colour: "dark-blue"
		priority: 2

	Email:
		icon: "at"
		match: /^(authors|(code)?owners)$/i
		colour: "auto-red"
		alias: /^(EML|mbox|e?-?mail)$/i
		scope: /^text\.eml($|\.)/

	EmberScript:
		icon: "em"
		scope: /\.ember(script)?$/i
		match: ".emberscript"
		colour: "medium-red"

	Emblem:
		icon: "mustache"
		scope: "emblem"
		match: /\.em(blem)?$/i
		colour: "medium-blue"

	Ensime:
		icon: "ensime"
		match: ".ensime"
		colour: "medium-red"

	EQ:
		icon: "eq"
		scope: "eq"
		match: ".eq"
		colour: "medium-orange"

	ESDoc:
		icon: "esdoc"
		priority: 2
		match: /^\.?esdoc\.([cm]?js|json)$/i
		colour: "medium-red"

	ExtJS:
		icon: "extjs"
		priority: 2
		match: /\bExtjs(-ext)?\.[cm]?js$/i
		colour: "light-green"


	Galaxy:
		icon: "galaxy"
		match: /^galaxy\.ini$/i
		colour: "medium-grey"
		priority: 2

	Galen:
		icon: "galen"
		match: [
			[".gspec", "medium-blue", scope: /^text\.galen$/]
			[".gtest", "medium-cyan", scope: /^text\.galen-t$/]
		]

	"GameMaker Language":
		icon: "gml"
		match: ".gml"
		colour: "medium-green"

	GAMS:
		icon: "gams"
		scope: /\.gams(-lst)?$/i
		match: ".gms"
		colour: "dark-red"

	GAP:
		icon: "gap"
		match: [
			[".gap", "auto-yellow", "gap"]
			[".gi", "dark-blue"]
			[".tst", "medium-orange"]
		]

	GAUSS:
		icon: "gauss"
		match: ".gss"
		colour: "medium-orange"
		scope: "gauss"

	GDB:
		icon: "gdb"
		match: [
			[".gdb", "auto-green", "gdb"]
			["gdbinit", "auto-cyan"]
		]

	Gear:
		icon: "gear"
		match: [
			[/^\.htaccess$/i, "medium-red"]
			[/^\.htpasswd$/i, "medium-orange"]
			[/^\.env\./i, "dark-green"]
			[/^\.lesshintrc$/i, "dark-yellow"]
			[/^\.csscomb\.json$/i, "medium-yellow"]
			[/^text\.enc$/, "dark-green"]
			[".csslintrc", "medium-yellow"]
			[".jsbeautifyrc", "medium-yellow"]
			[".jshintrc", "medium-yellow"]
			[".htmlhintrc", "medium-red"]
			[".coffeelintignore", "medium-maroon"]
			[".jscsrc", "medium-yellow"]
			[".module", "medium-blue"]
			[".codoopts", "medium-maroon"]
			[".yardopts", "medium-red"]
			[".arcconfig", "dark-blue"]
			[".pairs", "dark-green"]
			[".python-version", "dark-blue"]
			[".lintstagedrc", "dark-orange"]
			[".indent.pro", "medium-blue", priority: 2]
			[/^\./, null, priority: 0]
		]

	Gears:
		icon: "gears"
		match: ".dll"
		colour: "dark-orange"
		signature: /^PMOCCMOC/

	Generic:
		icon: "code"
		generic: true
		match: [
			[".xml", "medium-blue", signature: /^<\?xml /]
			[".rdf", "dark-red"]
			[".config", "medium-blue"]
			[/^_service$/, "medium-blue"]
			[/^configure\.ac$/, "medium-red"]
			[/^Settings\.StyleCop$/, "medium-green"]
			[".4th", "medium-blue"]
			[/\.adm[lx]$/i, "dark-blue"]
			[".aepx", "medium-purple"]
			[".appxmanifest", "medium-orange"]
			[".ash", "medium-cyan"]
			[/\.asn1?$/i, "medium-cyan"]
			[".axml", "dark-blue"]
			[".bc", "dark-red", "baan"]
			[".befunge", "medium-orange"]
			[".bmx", "dark-blue"]
			[".brs", "dark-blue", "brightscript"]
			[".capnp", "dark-red", scope: "capnp", alias: /^(Cap[^\w\s]?n\s*Proto|capnp)$/i]
			[".ccxml", "dark-blue"]
			[".cscfg", "medium-red"]
			[".cgi", "medium-red"]
			[".ch", "medium-red"]
			[".clixml", "dark-blue"]
			[".cocci", "medium-blue", scope: "smpl", alias: /^(SmPL|Coccinelle)$/i]
			[".ct", "dark-pink"]
			[".cw", "medium-red"]
			[".cy", "dark-green"]
			[".rdg", "dark-purple"]
			[".dita", "medium-purple"]
			[".ditamap", "dark-purple"]
			[".ditaval", "medium-green"]
			[".dotsettings", "dark-red"]
			[".dtd", "medium-cyan", scope: "dtd", alias: /^(DTD|Document[\s_-]*Type[\s_-]*Definition)$/i]
			[".dyl", "medium-blue"]
			[".dylan", "medium-blue"]
			[".eclxml", "dark-green"]
			[".fcgi", "medium-blue"]
			[".fidl", "medium-pink", "fidl"]
			[".filters", "medium-pink"]
			[".fo", "medium-red", "fasto"]
			[".forth", "medium-blue"]
			[".frt", "dark-purple"]
			[".fsproj", "dark-red"]
			[".fth", "dark-blue"]
			[".fun", "medium-orange"]
			[".fxml", "medium-maroon"]
			[".grace", "medium-purple"]
			[".grxml", "dark-orange"]
			[".iml", "medium-red"]
			[".intr", "dark-blue"]
			[".ivy", "dark-green"]
			[".jelly", "medium-yellow"]
			[/\.jf?lex$/i, "medium-red", scope: /^source\.jf?lex$/i]
			[".joy", "medium-yellow", "joy"]
			[".jsproj", "dark-yellow"]
			[".jspx", "dark-purple"]
			[".launch", "medium-blue"]
			[".lid", "medium-purple"]
			[".lp", "dark-purple"]
			[".m4", "medium-red", "m4"]
			[".manifest", "medium-blue"]
			[".mask", "medium-red"]
			[".mdpolicy", "dark-blue"]
			[".menu", "medium-blue"]
			[/\.ML$/, "medium-red"]
			[/\.mq[45h]$/i, "dark-blue", scope: /(^|\.)mq[45](?=\.|$)/i]
			[".mtml", "dark-blue"]
			[".muf", "medium-orange"]
			[".mumps", "medium-red"]
			[".mxml", "dark-maroon"]
			[".myt", "dark-blue"]
			[".natvis", "dark-green"]
			[".odd", "light-green"]
			[".ohm", "dark-yellow", "ohm"]
			[".omgrofl", "dark-purple"]
			[".osm", "dark-purple"]
			[".pig", "medium-pink"]
			[".plist", "dark-cyan", scope: "plist"]
			[".prg", "medium-red"]
			[".proj", "dark-green"]
			[".props", "medium-cyan"]
			[".psc1", "light-blue"]
			[".pt", "medium-red"]
			[".qhelp", "medium-purple", alias: "Semmle", uses: "XML"]
			[".resx", "medium-cyan"]
			[".rl", "medium-red"]
			[".scxml", "light-cyan"]
			[".sed", "dark-green", scope: "sed", interpreter: /^([gs]?sed|minised)$/]
			[/\.sgml?$/i, "dark-yellow"]
			[".sig", "light-maroon"]
			[".sk", "light-blue", signature: /^##Sketch 1 2/]
			[/\.sk[12]$/i, "medium-blue", alias: "Skencil", signature: /^##sK1 /]
			[".sml", "medium-red"]
			[".smt", "light-blue", scope: "smt", interpreter: /boolector|cvc4|mathsat5|opensmt|smtinterpol|smt-rat|stp|verit|yices2|z3/]
			[".smt2", "medium-cyan"]
			[".spthy", "medium-green", alias: "Tamarin", scope: /(^|\.)(spthy|tamarin)(\.|$)/i, interpreter: /^tamarin([\s_-]?prover)?$/i]
			[".srdf", "medium-blue"]
			[".st", "medium-blue"]
			[".stellaris", "medium-blue", "stellaris"]
			[".storyboard", "medium-green"]
			[".tagx", "medium-purple"]
			[".targets", "medium-red"]
			[".tera", "medium-red"]
			[".tml", "dark-green"]
			[".ui", "medium-blue"]
			[".urdf", "dark-orange"]
			[".ux", "light-orange"]
			[".vxml", "light-purple"]
			[".webidl", "medium-red"]
			[".wisp", "dark-cyan"]
			[/\.wlp(4|ppp)$/i, "medium-blue", "wlp4"]
			[".wsdl", "medium-red"]
			[".wsf", "medium-blue"]
			[".x3d", "medium-blue"]
			[".xacro", "medium-red"]
			[".xaml", "medium-blue"]
			[".xib", "dark-purple"]
			[".xlf", "dark-cyan"]
			[".xliff", "medium-red"]
			[".xmi", "medium-green"]
			[".xproj", "dark-red"]
			[".xsd", "dark-blue"]
			[".xsl", "medium-cyan", "xsl"]
			[".xslt", "dark-cyan"]
			[".xul", "medium-orange"]
			[".zcml", "dark-pink"]
		]

	Genshi:
		icon: "genshi"
		scope: "genshi"
		alias: /^xml\+(genshi|kid)$/i
		match: ".kid"
		colour: "medium-red"

	GenStat:
		icon: "genstat"
		match: [
			[".gen", "medium-green"]
			[".gpi", "medium-blue"]
		]

	Gentoo:
		icon: "gentoo"
		match: [
			[".ebuild", "dark-cyan", scope: "ebuild"]
			[".eclass", "medium-blue"]
		]

	GIMP:
		icon: "gimp"
		match: [
			[".xcf", "medium-red"]
			[".ggr", "medium-orange"]
			[".gih", "medium-maroon"]
			[".gpl", "medium-green"]
			[".vbr", "medium-cyan"]
		]

	Git:
		icon: "git"
		match: [
			[/^\.git|^\.keep$|\.mailmap$/i, "medium-red", scope: /\.git-(commit|config|rebase)$/i]
			[/\.git(ignore|config|attributes)$/i, "medium-red", priority: 0.5]
		]

	"Git - Commit":
		icon: "git-commit"
		match: /^(ATOM_)?COMMIT_EDITMSG$/
		colour: "medium-red"

	"Git - Merge":
		icon: "git-merge"
		match: /^MERGE_(HEAD|MODE|MSG)$/
		colour: "medium-red"

	GitLab:
		icon: "gitlab"
		priority: 2
		match: /^\.gitlab-ci\.yml$/
		colour: "medium-orange"

	Glade:
		icon: "glade"
		match: ".glade"
		colour: "medium-green"

	Glide:
		icon: "glide"
		priority: 2
		match: /^glide\.ya?ml$/i
		colour: "light-orange"

	glTF:
		icon: "gltf"
		match: ".gltf"
		colour: "medium-green"

	Glyph:
		icon: "pointwise"
		match: ".glf"
		colour: "medium-blue"

	Glyphs:
		icon: "glyphs"
		match: ".glyphs"
		colour: "medium-green"

	GN:
		icon: "gn"
		match: [
			[".gn", "dark-blue", "gn"]
			[".gni", "medium-blue"]
		]

	GNU:
		icon: "gnu"
		match: /\.(gnu|gplv[23])$/i
		colour: "auto-red"

	GNOME:
		icon: "gnome"
		match: /\.gtk/
		priority: 0.25

	Gnuplot:
		icon: "gnuplot"
		scope: "gnuplot"
		interpreter: "gnuplot"
		match: /\.(gp|plo?t|gnuplot)$/i
		colour: "medium-red"


	Golo:
		icon: "golo"
		scope: "golo"
		match: ".golo"
		colour: "medium-orange"

	Gosu:
		icon: "gosu"
		match: [
			[".gs", "medium-blue", scope: /\.gosu(\.\d+)?$/i]
			[".gst", "medium-green"]
			[".gsx", "dark-green"]
			[".vark", "dark-blue"]
		]

	"Grammatical Framework":
		icon: "gf"
		match: ".gf"
		colour: "medium-red"

	"Gravit Designer":
		icon: "gvdesign"
		match: ".gvdesign"
		colour: "medium-yellow"
		uses: "Zip" # Gzipped JSON

	Greenkeeper:
		icon: "greenkeeper"
		match: /^greenkeeper\.json$/i
		colour: "medium-green"
		priority: 2
		uses: "JSON"

	Gridsome:
		icon: "gridsome"
		match: /\bgridsome\.(config|client|server)\.[jt]s$/i
		colour: "medium-cyan"
		priority: 2


	HTML:
		icon: "html5"
		match: [
			[".kit", "medium-green"]
			[".isml", "medium-blue", "isml"]
			[".latte", "medium-red", "latte"]
			[".scaml", "dark-red", "scaml"]
			[".vash", "medium-red", "vash"]
		]

	Ledger:
		icon: "graph"
		match: [
			[".ledger", "medium-blue", "ledger"]
			[".hledger", "medium-green"]
		]

	Lefthook:
		icon: "lefthook"
		priority: 2
		match: /^lefthook(-local)?\.ya?ml$/i
		colour: "medium-red"

	Lektor:
		icon: "lektor"
		match: [
			[".lr", "dark-purple"]
			[".lektorproject", "medium-orange"]
		]

	Lerna:
		icon: "lerna"
		priority: 2
		match: /^lerna\.json$/i
		colour: "auto-blue"

	Leiningen:
		icon: "lein"
		priority: 2
		match: "project.clj"

	Lex:
		icon: "lex"
		alias: "Flex"
		match: [
			[/\.l(ex)?$/i, "medium-cyan", "lex"]
			[".flex", "dark-red"]
		]

	LFE:
		icon: "lfe"
		match: ".lfe"
		colour: "dark-red"

	LightWave3D:
		icon: "lightwave"
		match: [
			[".lwo", "medium-red"]
			[".lws", "medium-blue"]
		]

	LilyPond:
		icon: "lilypond"
		match: [
			[".ly", "medium-green", scope: /\.(At)?lilypond/i, alias: /^Lily\s*Pond$/i, mime: "text/x-lilypond"]
			[".ily", "dark-green"]
		]

	Lime:
		icon: "lime"
		match: ".hxp"
		colour: "medium-green"
		priority: 1.5

	Link:
		icon: "link"
		match: [
			[".url", "dark-blue"]
			[".lnk", "medium-blue", priority: 3, alias: "Windows shortcut", signature: /^L\0{3}\x01\x14\x02\0{5}\xC0\0{6}F/]
			[/\.alias$/, "medium-blue", priority: 3, alias: "macOS alias", signature: /^book\0{4}mark\0{4}/]
		]

	Lisp:
		icon: "lisp"
		match: [
			[".lisp", "dark-red", "lisp"]
			[".lsp", "medium-red", "newlisp"]
			[".nl", "medium-maroon"]
			[".ny", "medium-blue"]
			[".podsl", "medium-purple"]
			[".sexp", "medium-blue"]
			[".sbclrc", "dark-purple"]
		]

	LiveScript:
		icon: "ls"
		match: [
			[".ls", "medium-blue", scope: "livescript", alias: /^(ls|live-script)$/i]
			["._ls", "dark-blue"]
			[/^Slakefile$/, "medium-green"]
		]

	LLVM:
		icon: "llvm"
		match: [
			[".ll", "dark-green", "llvm"]
			[/\.clang-(format|tidy)$/i, "auto-yellow"]
			[/^ubsan\.blacklist$/i, "auto-red"]
		]

	Logos:
		icon: "mobile"
		match: [
			[".xm", "dark-blue", "logos"]
			[".xi", "dark-red"]
		]

	Logtalk:
		icon: "logtalk"
		scope: "logtalk"
		match: /\.(logtalk|lgt)$/i
		colour: "medium-red"

	LOLCODE:
		icon: "lolcode"
		priority: 0.5 # pls
		match: ".lol"
		colour: "dark-red"
		interpreter: "lci"
		scope: "lol"

	LookML:
		icon: "lookml"
		match: /\.(lookml|lkml)$/i
		colour: "medium-purple"

	LSL:
		icon: "lsl"
		match: [
			[".lsl", "medium-cyan", "lsl"]
			[".lslp", "dark-cyan"]
		]

	Lua:
		icon: "lua"
		match: [
			[".lua", "medium-blue", "lua"]
			[".pd_lua", "dark-blue"]
			[".rbxs", "dark-purple"]
			[".wlua", "dark-red"]
			[/^Lakefile$/i, "dark-green"]
			[".luacheckrc", "medium-green"]
			[".rockspec", "medium-purple"]
		]

	Makefile: # (Or similar build systems)
		icon: "checklist"
		match: [
			[/^Makefile/, "medium-yellow", scope: "makefile", alias: /^(bsdmake|make|mf)$/i, interpreter: "make"]
			[/^mk\.config$/, "medium-green", priority: 2]
			[/\.(mk|mak|make)$/i, "medium-yellow"]
			[/^BSDmakefile$/i, "medium-red"]
			[/^GNUmakefile$/i, "medium-green"]
			[/^makefile\.sco$/i, "medium-red"]
			[/^Kbuild$/, "medium-blue"]
			[/^makefile$/, "medium-yellow"]
			[/^mkfile$/i, "medium-yellow"]
			[/^\.?qmake$/i, "dark-blue"]
			[".am", "medium-red"]
			[".bb", "dark-blue"]
			[/^DEPS$/, "dark-blue"]
			[".mms", "medium-blue"]
			[".mmk", "light-blue"]
			[".pri", "dark-purple"]
		]

	Mako:
		icon: "mako"
		scope: "mako"
		match: /\.mak?o$/i
		colour: "dark-blue"

	Roff:
		icon: "manpage"
		match: [
			[/\.(1([bcmstx]|has|in)?|[24568]|3(avl|bsm|cfgadm|in|[cmx]|perl|pm?|qt)?|7(d|fs|i|ipp|m|p)?|9[efps]?|chem|eqn|groff|man|mandoc|mdoc|me|mom|nr?|nroff|pic|roff?|tmac|tmac-u|tr|troff)$/i
				"dark-green"
				scope: /\.[gtn]?roff$/i
				alias: /^([gtn]?roff|man([-_\s]?page|doc)?|mdoc)$/i
				interpreter: /man|mandoc|([gnt]|dit)?roff/i
				signature: /// ^
					( '\\"\ [tre]+(?=\s|$)
					| \.TH[\ \t]+(?:\S+)
					| \.so[\ \t]+man(\w+)/.+\.\1($|\s)
					| \.(EQ|PS|cstart)\n
					| ('+\t?|\.\t)\\"\s
					) ///m]
			[/^(man|mdoc)\.template$/i, "dark-green"]
			[/\.(rnh|rno|run|runoff)$/i, "dark-maroon", "runoff"]
			[/(^|\.)((troff|eqn)rc(-end)?)$/i, "dark-green"]
			[/^tmac\.|^(mmn|mmt|toc\.entries)$/i, "dark-green", priority: 2]
			[///
				(\\|/)
				(?: man(\w+)\1[^\\/]+\.\2
				| (?:tmac|eqnchar)\.d\1(?:ms\.)?[^\\/.]+(?:\.in)?
				| picasso\1(?:defs\.\w+|disclaimer)
				)$
			///, "dark-green", matchPath: true]
		]

	Map:
		icon: "sourcemap"
		priority: 2
		match: [
			[".css.map", "medium-blue"]
			[".js.map", "auto-yellow"]
			[".cjs.map", "auto-green"]
			[".mjs.map", "auto-blue"]
			[".cidmap", "medium-orange", "cidmap"]
			[".map", "dark-blue", priority: 0.5]
		]

	Mapbox:
		icon: "mapbox"
		scope: "mss"
		alias: /^Carto(CSS)?$/i
		match: ".mss"
		colour: "medium-cyan"

	Markdown:
		icon: "markdown"
		scope: /(^|\.)[gp]fm|md|markdown(\.|$)/i
		match: /\.(md(te?xt)?|mdown|markdown|mkd|mkdown|mdwn|mkdn|rmd|ron|pmd)$/i
		alias: /^(CommonMark|GFM|Pandoc)$|\bMarkdown\b/i
		colour: "medium-blue"

	MarkdownLint:
		icon: "markdownlint"
		match: [
			[/^\.markdownlint/i, "dark-green", interpreter: "mdl", priority: 2]
			[/^\.?mdlrc(\.style)?\.rb$/i, "medium-red"]
			[/^\.?mdlrc$/i, "dark-cyan"]
		]

	Marko:
		icon: "marko"
		priority: 2
		match: [
			[".marko", "medium-blue", "marko"]
			[/\.marko\.[cm]?js$/i, "medium-maroon"]
		]

	Materialize:
		icon: "materialize"
		priority: 2
		match: /^materialize(\.min)?\.([cm]?js|css)$/i
		colour: "light-red"

	Mathematica:
		icon: "mathematica"
		match: [
			[".mathematica", "dark-red", scope: "mathematica", alias: "mma"]
			[".ma", "medium-orange"]
			[".mt", "medium-maroon"]
			[".nb", "dark-orange"]
			[".nbp", "dark-red"]
			[".wl", "medium-yellow"]
			[".wlt", "dark-yellow"]
		]

	MathJax:
		icon: "mathjax"
		priority: 2
		match: /^MathJax[^.]*\.[cm]?js$/i
		colour: "dark-green"

	MATLAB:
		icon: "matlab"
		match: [
			[".matlab", "medium-yellow", "matlab"]
			[".mlappinstall", "dark-maroon", uses: "ZIP"]
			[".mlpkginstall", "medium-cyan", uses: "XML"]
			[".mltbx", "dark-red"]
			[".mdlp", "medium-red"]
			[".mn", "dark-purple"]
			[".sldd", "medium-maroon", alias: "Simulink Data Dictionary"]
			[".slx", "medium-red"]
			[".slxp", "dark-red"]
		]

	Max:
		icon: "max"
		match: [
			[".maxpat", "dark-purple"]
			[".maxhelp", "medium-red"]
			[".maxproj", "medium-blue"]
			[".mxt", "medium-purple"]
			[".pat", "medium-green"]
		]

	MAXScript: # Or 3DSMax-specific files
		icon: "maxscript"
		match: [
			[".ms", "dark-blue", scope: "maxscript"]
			[".mcr", "dark-purple"]
			[".mce", "medium-red"]
			[".max", "dark-cyan"]
			[".3ds", "medium-cyan"]
		]

	Maya:
		icon: "maya"
		match: [
			[".mb", "dark-cyan"]
			[".mel", "dark-blue"]
			[/\.mcf[ip]$/i, "dark-purple"]
		]

	MDX:
		icon: "mdx"
		match: ".mdx"
		colour: "medium-orange"

	MediaWiki:
		icon: "mediawiki"
		match: [
			[".mediawiki", "medium-yellow", "mediawiki"]
			[".wiki", "medium-orange"]
		]

	"Mention-bot config":
		icon: "bullhorn"
		match: /^\.mention-bot$/i
		colour: "medium-orange"

	Mercurial:
		icon: "hg"
		match: [
			[".hgignore", "medium-grey"]
			[/\.?hgrc$/i, "dark-grey"]
			[".hgsub", "dark-cyan"]
			[".hgsubstate", "medium-cyan"]
		]

	Mercury:
		icon: "mercury"
		scope: "mercury"
		interpreter: "mmi"
		match: ".moo"
		colour: "medium-cyan"

	Meson:
		icon: "meson"
		priority: 2
		match: /^(meson\.build|meson_options\.txt)$/i
		colour: "medium-green"
		scope: "meson"

	Metal:
		icon: "metal"
		match: ".metal"
		colour: "dark-cyan"

	"Microsoft Access":
		icon: "access"
		match: [
			[".accda", "dark-maroon"]
			[".accdb", "medium-maroon"]
			[".accde", "medium-green"]
			[".accdr", "medium-red"]
			[".accdt", "dark-red"]
			[".adn", "light-maroon"]
			[".laccdb", "light-maroon"]
			[".mdw", "dark-purple"]
		]

	"Microsoft Excel":
		icon: "excel"
		match: [
			[".xls", "dark-orange"]
			[".xlsx", "dark-green"]
			[".xlsm", "medium-green"]
			[".xlsb", "medium-red"]
			[".xlt", "dark-cyan"]
			[".xla", "medium-orange"]
			[".xlam", "dark-red"]
			[".xltm", "medium-maroon"]
			[".xltx", "dark-maroon"]
		]

	"Microsoft InfoPath":
		icon: "infopath"
		match: /\.(infopathxml|xsn|xsf|xtp2)$/i
		colour: "dark-purple"

	"Microsoft Lync":
		icon: "lync"
		match: /\.o?crec$/i
		colour: "dark-blue"
		signature: /^\r\n\x14\x15\0\x07\n\r\x06\x01\v/

	"Microsoft OneNote":
		icon: "onenote"
		match: ".one"
		colour: "dark-purple"

	"Microsoft Outlook":
		icon: "outlook"
		match: [
			[".pst", "medium-blue"]
			[".bcmx", "dark-blue"]
			[".oab", "medium-blue"]
			[".otm", "medium-red"]
			[".oft", "medium-maroon"]
			[".nk2", "dark-red"]
			[/\.olk14\w*$/i, "dark-cyan", priority: 0.75]
		]

	"Microsoft PowerPoint":
		icon: "powerpoint"
		match: [
			[".pps", "dark-red"]
			[".ppsx", "medium-orange"]
			[".ppt", "dark-orange"]
			[".pptx", "medium-red"]
			[".potm", "medium-maroon"]
		]

	"Microsoft Project":
		icon: "msproject"
		match: [
			[".mpp", "medium-green"]
			[".mpt", "dark-green"]
		]

	"Microsoft Publisher":
		icon: "publisher"
		match: ".puz"
		colour: "dark-cyan"

	"Microsoft Visio":
		icon: "visio"
		match: [
			[".vsdx", "dark-blue"]
			[".vdw", "dark-purple"]
			[".vdx", "medium-red"]
			[".vsd", "medium-blue"]
			[".vsdm", "dark-maroon"]
			[".vsw", "medium-green"]
			[".vsx", "dark-red"]
			[".vtx", "dark-red"]
			[".vrd", "medium-cyan"]
			[".vsl", "medium-orange"]
			[/\.vs[st][mx]?$/i, "dark-blue"]
		]

	Minecraft:
		icon: "minecraft"
		match: [
			[/^mcmod\.info$/i, "dark-green", scope: "forge-config"]
			[".mcfunction", "light-green"]
			[".mclevel", "medium-green"]
			[".mcpack", "dark-green"]
			[".mcworld", "medium-blue"]
			[/^pack\.mcmeta$/i, "dark-green"]
			[/\.png\.mcmeta$/, "dark-green"]
		]

	MiniZinc:
		icon: "minizinc"
		match: [
			[".mzn", "medium-blue", "mzn"]
			[".dzn", "dark-blue", alias: "MiniZinc Data"]
		]

	Mirah:
		icon: "mirah"
		match: [
			[/\.dr?uby$/g, "medium-blue", "mirah"]
			[/\.mir(ah)?$/g, "light-blue"]
		]

	Miranda:
		icon: "miranda"
		priority: 0.5
		match: ".m"
		scope: "miranda"
		colour: "medium-red"

	mIRC:
		icon: "mirc"
		match: ".mrc"
		colour: "medium-red"
		scope: "mrc"

	MJML:
		icon: "mjml"
		match: [
			[".mjml", "medium-red", "mjml"]
			[".mjmlslim", "medium-orange"]
		]

	MkDocs:
		icon: "book-alt"
		priority: 2
		match: /^\.?mkdocs\.ya?ml$/i
		colour: "medium-blue"

	Mocha:
		icon: "mocha"
		priority: 2
		match: [
			[/\.mocharc\.(jsonc?|[cm]?js|ya?ml)$/i, "medium-maroon"]
			[/^mocha(\.min)?\.([jt]sx?|es6?|coffee)$/i, "medium-maroon"]
			[/^mocha(\.min)?\.(s?css|less|styl)$/i, "medium-red"]
			["mocha.opts", "light-maroon", priority: 2]
		]

	Model: # Or generic 3D asset
		icon: "model"
		generic: true
		match: [
			[".obj", "medium-red", scope: "wavefront.obj"]
			[".mtl", "dark-blue",  scope: "wavefront.mtl"]
			[".shader", "medium-cyan", alias: "ShaderLab", scope: /\.(shader(code|lab)|cg)(?=\.|$)/i]
			[/\.geo(m|metry)?$/i, "medium-red"]
			[".c4d", "dark-blue"]
			[".comp", "medium-purple"]
			[".tesc", "medium-green"]
			[".tese", "medium-green"]
			[".cginc", "dark-cyan"]
			[".dxf", "medium-orange"]
			[".dwg", "dark-orange"]
			[".jas", "medium-yellow"]
			[".mdl", "medium-red"]
			[".ply", "dark-red", mime: "text/plain", signature: /^ply|^EPLYBNDS/]
			[".fnc", "dark-blue", alias: "QuickCAM 3D"]
			[".stl", "dark-green"]
			[".u3d", "medium-orange"]
			[/\.(rviz|vcg)$/i, "dark-blue", "rviz"]
			[".x", "medium-green", alias: "DirectX 3D File", scope: /(^|\.)direct-?x($|\.)/i, priority: 0.5, signature: /^xof 0303(?:txt|bin|tzip|bzip)\b/]
		]

	Modelica:
		icon: "modelica"
		scope: /\.modelica(script)?$/i
		match: ".mo"
		colour: "auto-red"

	Modernizr:
		icon: "modernizr"
		priority: 2
		match: /^\.?modernizr(rc)?\.[cm]?js$|^modernizr([-\.]custom|-\d\.\d+)(\.\d+)?\.[cm]?js$/i
		colour: "medium-red"

	Modo:
		icon: "modo"
		match: ".lxo"
		colour: "medium-cyan"

	"Modula-2":
		icon: "modula2"
		match: [
			[".mod", "medium-blue", scope: /(^|\.)modula-?2(\.|$)/i]
			[".def", "medium-green"]
			[".m2", "medium-red"]
		]

	"Modula-3":
		icon: "modula3"
		match: [
			[".i3", "medium-blue", scope: /(^|\.)modula-?3(\.|$)/i]
			[".ig", "medium-green"]
			[".m3", "dark-blue"]
			[".mg", "dark-green"]
			[/^m3(makefile|overrides)$/i, "medium-red", "quake"]
		]

	Moho:
		icon: "moho"
		match: [
			[".moho", "medium-orange", uses: "Zip"]
			[".mohoaction", "medium-blue"]
			[".mohobrush", "medium-maroon"]
			[".mohoexport", "medium-yellow"]
			[".mohoproj", "medium-orange", priority: 1.5, uses: "JSON"]
			[".mohostyle", "medium-purple"]
		]

	Moleculer:
		icon: "moleculer"
		priority: 2
		match: /^moleculer\.config\.([cm]?js|json|ts)$/i
		colour: "medium-blue"

	Moment:
		icon: "moment"
		priority: 2
		match: /^moment(-with-locales)?(\.min)?\.[cm]?js$/i
		colour: "medium-cyan"

	"Moment Timezone":
		icon: "moment-tz"
		priority: 2
		match: /^moment-timezone(-with-data)?(-\d{4}-\d{4})?(\.min)?\.[cm]?js$/i
		colour: "dark-blue"

	Monkey:
		icon: "monkey"
		scope: "monkey"
		match: ".monkey"
		colour: "medium-maroon"

	Monotone:
		icon: "monotone"
		match: ".mtn-ignore"
		colour: "dark-purple"

	MoonScript:
		icon: "moon"
		scope: "moon"
		interpreter: "moon"
		match: ".moon"
		colour: "medium-yellow"

	MooTools:
		icon: "mootools"
		priority: 2
		match: /^mootools[^.]*\d+\.\d+(.\d+)?[^.]*\.[cm]?js$/i
		colour: "medium-purple"

	mruby:
		icon: "mruby"
		match: ".mrb"
		colour: "medium-red"
		interpreter: "mruby"

	mSQL:
		icon: "msql"
		match: ".dsql"
		colour: "medium-purple"

	MuPAD:
		icon: "mupad"
		match: ".mu"
		colour: "medium-red"

	Music:
		icon: "music"
		generic: true
		match: [
			[".chord", "medium-orange"]
			[/\.midi?$/i, "dark-blue", signature: /^MThd/]

# Pure Data
			[".pd", "dark-red"]
		]

	Mustache: # (Or Handlebars)
		icon: "mustache"
		scope: /(^|\.)(mustache|handlebars)(\.|$)/i
		alias: /^(hbs|htmlbars|handlebars)$/i
		match: /\.(hb[st]|handlebars|(mu)?stache)$/i
		colour: "medium-orange"

	Nano:
		icon: "nano"
		match: ".nanorc"
		colour: "medium-blue"
		scope: /\.nanorc(?=\.|$)/i

	Nanoc:
		icon: "nanoc"
		priority: 2
		match: /^\.?nanoc\.ya?ml$/i
		colour: "medium-red"

	NAnt:
		icon: "nant"
		scope: "nant-build"
		match: ".build"
		colour: "medium-orange"

	NASM: # Netwide Assembler
		icon: "nasm"
		match: ".nasm"
		colour: "dark-blue"

	"NCAR Command Language (NCL)":
		icon: "earth"
		scope: "ncl"
		match: ".ncl"
		colour: "medium-green"

	NDepend:
		icon: "ndepend"
		match: /\.nd?proj$/i
		colour: "medium-blue"

	Neko:
		icon: "neko"
		match: [
			[".neko", "medium-orange", "neko"]
			[/^run\.n$/, "dark-orange", priority: 2]
		]

	Neo4J:
		icon: "neo4j"
		match: /\.cyp(her)?$/i
		colour: "auto-blue"
		scope: "neo4j"

	Nessus:
		icon: "nessus"
		match: ".nasl"
		colour: "auto-cyan"
		scope: "nasl"
		interpreter: "nasl"

	NetLinx:
		icon: "amx"
		match: [
			[".axs", "medium-blue"]
			[".axi", "dark-blue"]
		]

	NetLogo:
		icon: "netlogo"
		match: ".nlogo"
		colour: "medium-red"

	Netlify:
		icon: "netlify"
		priority: 2
		match: /^netlify\.toml$/i
		colour: "dark-blue"

	NewRelic:
		icon: "newrelic"
		priority: 2
		match: /^newrelic\.yml/i
		colour: "medium-cyan"

	Nextflow:
		icon: "nextflow"
		match: [
			[".nf", "medium-green", "nextflow"]
			[/^nextflow\.config$/i, "dark-green", priority: 2]
		]

	NextJS:
		icon: "nextjs"
		priority: 2
		match: /^next\.config\.[cm]?js$/i
		colour: "dark-grey"

	NestJS:
		icon: "nestjs"
		priority: 2
		match: /^nestconfig\.json$/i
		colour: "medium-red"

	Netpbm:
		icon: "image"
		uses: "Text"
		priority: 0.75 # Rare
		match: [
			[".pbm", "medium-pink", alias: "Portable Bitmap",  mime: "image/x‑portable‑bitmap"]
			[".pgm", "medium-grey", alias: "Portable Graymap", mime: "image/x‑portable‑graymap"]
			[".ppm", "dark-maroon", alias: "Portable Pixmap",  mime: "image/x‑portable‑pixmap"]
			[".pnm", "medium-blue", alias: "Portable Anymap",  mime: "image/x‑portable‑anymap"]
		]

	NGINX:
		icon: "nginx"
		priority: 2
		match: [
			[/^nginx(\.[-\w]+)*\.conf$/i, "dark-green"]
			[".nginxconf", "medium-green", scope: "nginx", alias: "nginx configuration file"]
		]

	Nib:
		icon: "nib"
		match: ".nib"
		colour: "dark-orange"

	Nickle:
		icon: "nickle"
		match: ".5c"
		colour: "auto-grey"
		interpreter: "nickle"
		scope: "nickle"

	Nightwatch:
		icon: "nightwatch"
		match: /^nightwatch\.conf(ig)?\.[cm]?js$/i
		colour: "dark-maroon"
		priority: 2

	Nim:
		icon: "nimrod"
		scope: "nim"
		match: /\.nim(rod)?$/i
		colour: "medium-green"
		alias: "Nimrod"

	Nimble:
		icon: "nimble"
		match: ".nimble"
		colour: "medium-grey"
		uses: "Nim"

	Ninja:
		icon: "shuriken"
		match: [
			[".ninja", "medium-blue", "ninja"]
			[".ninja.d", "dark-cyan", priority: 2]
		]

	"Nintendo 64":
		icon: "n64"
		uses: "Binary"
		match: [
			[".n64", "dark-cyan"]
			[".z64", "dark-green"]
		]

	Nit:
		icon: "nit"
		scope: "nit"
		match: ".nit"
		colour: "dark-green"

	Nix:
		icon: "nix"
		scope: "nix"
		alias: "nixos"
		match: ".nix"
		colour: "medium-cyan"

	Nmap:
		icon: "nmap"
		scope: "nmap"
		match: ".nse"
		colour: "dark-blue"

	NodeJS:
		icon: "node"
		match: [
			[".njs", "medium-green"]
			[".nvmrc", "medium-green"]
			[".node", "dark-green"]
			[".node-version", "dark-green"]
			[/^BUNDLED_NODE_VERSION$/, "dark-green"]
			[".node_repl_history", "dark-green"]
		]

	Nodemon:
		icon: "nodemon"
		priority: 2
		match: /^nodemon\.json$|\.nodemonignore$/i
		colour: "medium-green"

	Nomad:
		icon: "nomad"
		match: ".nomad"
		colour: "medium-green"

	Noon:
		icon: "noon"
		match: ".noon"
		colour: "dark-grey"
		scope: "noon"
		interpreter: "noon"

	Normalize:
		icon: "normalize"
		priority: 2
		match: /^normalize(\.min)?\.(css|less|scss|styl)$/i
		colour: "medium-red"

	NPM:
		icon: "npm"
		priority: 2
		match: /^(package\.json|\.npmignore|\.?npmrc|npm-debug\.log|npm-shrinkwrap\.json|package-lock\.json)$/i
		colour: "medium-red"
		scope: /\.ini\.npmrc\b/

	NSIS:
		icon: "nsis"
		match: [
			[".nsi", "medium-purple", "nsis"]
			[".nsh", "dark-cyan"]
		]

	"NSRI Config":
		icon: "nsri"
		priority: 2
		match: [
			[/^\.nsrirc(\.(json|(config\.)?[cm]?js|ya?ml))?$/i, "medium-green"]
			[/^\.nsriignore(\.(json|(config\.)?[cm]?js|ya?ml))?$/i, "dark-green"]
		]

	"NSRI Integrity":
		icon: "nsri-alt"
		match: ".integrity.json"
		colour: "medium-green"
		priority: 2

	Nu:
		icon: "recycle"
		match: [
			[".nu", "light-green", scope: "nu", alias: "nush", interpreter: "nush"]
			[/^Nukefile$/, "dark-green"]
		]

	NuGet:
		icon: "nuget"
		match: [
			[".nuspec", "medium-blue"]
			[".pkgproj", "dark-purple"]
		]

	NumPy:
		icon: "numpy"
		match: [
			[".numpy", "dark-blue"]
			[".numpyw", "medium-blue"]
			[".numsc", "medium-orange"]
		]

	Nunjucks:
		icon: "nunjucks"
		match: /\.(nunjucks|njk)$/i
		colour: "dark-green"

	Nuxt:
		icon: "nuxt"
		priority: 2
		match: /^nuxt\.config\.[jt]s$/i
		colour: "medium-cyan"

	NXC: # Not eXactly C
		icon: "nxc"
		match: ".nxc"
		scope: "nxc"
		colour: "medium-orange"

	Oberon:
		icon: "oberon"
		match: ".ob2"
		colour: "medium-purple"
		scope: "oberon"
		uses: "Modula-2"

	"Objective-C":
		icon: "objc"
		match: [
			[/\.mm?$/i, "medium-blue", scope: /\.objc(pp)?$/i, alias: /^(Obj-?C|ObjectiveC)(\+\+)?$/i]
			[".pch", "dark-red"]
			[".x", "dark-green"]
		]

	"Objective-J":
		icon: "objj"
		match: [
			[".j", "dark-orange", scope: "objj", alias: /^(Obj-?J|ObjectiveJ)$/i]
			[".sj", "dark-red"]
		]

	OCaml:
		icon: "ocaml"
		match: [
			[".ml", "medium-orange", scope: "ocaml", interpreter: /ocaml(run|script)?/]
			[".mli", "dark-orange"]
			[".eliom", "medium-red"]
			[".eliomi", "dark-red"]
			[".ml4", "medium-green"]
			[".mll", "dark-green", "ocamllex"]
			[".mly", "dark-yellow", "menhir"]
		]

	Octave:
		icon: "octave"
		match: [
			[".octave", "medium-orange", scope: "octave"]
			[".octave_hist", "medium-orange"]
			[".octaverc", "dark-orange"]
		]

	Odin:
		icon: "odin"
		match: ".odin"
		colour: "medium-blue"
		scope: "odin"
		interpreter: "odin"

	OOC:
		icon: "ooc"
		scope: "ooc"
		match: ".ooc"
		colour: "medium-green"

	Opa:
		icon: "opa"
		scope: "opa"
		match: ".opa"
		colour: "medium-blue"

	OpenCL:
		icon: "opencl"
		scope: "opencl"
		match: ".opencl"
		colour: "medium-red"

	"OpenEdge ABL":
		icon: "progress"
		scope: "abl"
		alias: /^(progress|openedge|abl)$/i
		match: /\.(p|abl)$/i
		colour: "medium-green"

	"OpenGL Shading Language":
		icon: "opengl"
		alias: /^(GLSL|GLslang)$/i
		match: /\.(glslv?|gsh|gshader)$/i
		colour: "dark-cyan"
		scope: "glsl"

	"OpenGL Vertex Shader":
		icon: "vertex"
		match: [
			[/\.(vert|vrx|vertex|vsh(ader)?)$/i, "medium-blue", alias: /^Vertex[-_\s]*(Shader|Program)?$/i]
			[/\.(fra?g|fp|fsh|fshader)$/i, "medium-red", alias: /^Fragment[-_\s]*(Shader|Program)?$/i]
		]

	OpenOffice:
		icon: "openoffice"
		match: [
			[".odt", "medium-blue"]
			[".ott", "dark-blue"]
			[".fodt", "dark-purple"]
			[".ods", "medium-green"]
			[".ots", "dark-green"]
			[".fods", "dark-cyan"]
			[".odp", "medium-purple"]
			[".otp", "dark-pink"]
			[".fodp", "medium-pink"]
			[".odg", "medium-red"]
			[".otg", "dark-red"]
			[".fodg", "dark-orange"]
			[".odf", "medium-maroon"]
			[".odb", "light-pink"]
		]

	"Open Policy Agent":
		icon: "openpolicy"
		match: ".rego"
		colour: "medium-cyan"
		scope: "rego"

	OpenSCAD:
		icon: "scad"
		match: [
			[".scad", "medium-orange", scope: "scad"]
			[".jscad", "medium-yellow"]
		]

	OpenVMS:
		icon: "openvms"
		match: ".hlb"
		colour: "medium-blue"

	OpenVPN:
		icon: "openvpn"
		match: ".ovpn"
		colour: "medium-orange"

	"Org-mode":
		icon: "org"
		match: ".org"
		colour: "dark-green"

	"OS X":
		icon: "osx"
		match: ".dmg"
		colour: "medium-red"
		signature: /^\x78\x01\x73\x0D\x62\x62\x60/

	Ox:
		icon: "ox"
		match: [
			[".ox", "auto-cyan", scope: "ox"]
			[".oxh", "auto-green"]
			[".oxo", "auto-blue"]
		]

	Oxygene:
		icon: "oxygene"
		scope: "oxygene"
		match: ".oxygene"
		colour: "auto-cyan"

	Oz:
		icon: "oz"
		scope: "oz"
		match: ".oz"
		colour: "medium-yellow"

	R:
		icon: "r"
		scope: "r"
		alias: /^(Rscript|splus|Rlang)$/i
		interpreter: "Rscript"
		match: /\.(r|Rprofile|Rhistory|rsx|rd)$/i
		colour: "medium-blue"

	Racket:
		icon: "racket"
		match: [
			[".rkt", "medium-red", "racket"]
			[".rktd", "medium-blue"]
			[".rktl", "light-red"]
			[".scrbl", "dark-blue", "scribble"]
		]

	Raku:
		icon: "perl6"
		match: [
			[".pl6", "medium-purple", scope: /(^|\.)perl6(fe)?(?=\.|$)/, alias: /^(pl6|Perl\s*6)$/i, interpreter: "perl6"]
			[/\.[tp]6$|\.6pl$/i, "light-blue"]
			[/\.(pm6|p6m)$/i, "dark-pink"]
			[".6pm", "dark-cyan"]
			[".nqp", "dark-purple"]
			[".p6l", "medium-blue"]
			[".pod6", "dark-green"]
			[".raku", "medium-blue"]
			[".rakumod", "dark-blue"]
			[".rakutest", "dark-purple"]
			[/^Rexfile$/, "medium-green"]
		]

	RAML:
		icon: "raml"
		scope: "raml"
		match: ".raml"
		colour: "medium-cyan"

	Raphael:
		icon: "raphael"
		priority: 2
		match: /^raphael(\.min|\.no-deps)*\.[cm]?js$/i
		colour: "medium-orange"

	Rascal:
		icon: "rascal"
		scope: "rascal"
		match: ".rsc"
		colour: "medium-yellow"

	Razzle:
		icon: "razzle"
		priority: 2
		match: /^razzle\.config\./i
		colour: "dark-blue"
		uses: "JavaScript"

	Remark:
		icon: "remark"
		priority: 2
		match: [
			[/^\.rehyperc(\.([cm]?js|json|ya?ml))?$/i, "medium-yellow"]
			[/^\.remarkrc(\.([cm]?js|json|ya?ml))?$/i, "medium-red"]
			[/^\.retextrc(\.([cm]?js|json|ya?ml))?$/i, "medium-green"]
			[".rehypeignore", "dark-yellow"]
			[".remarkignore", "dark-red"]
			[".retextignore", "dark-green"]
		]

	RData:
		icon: "rdata"
		uses: "Binary"
		match: [
			[".Rdata", "medium-red"]
			[".rdb", "medium-orange"]
			[".rds", "medium-yellow"]
			[".rdx", "medium-maroon"]
		]

	RDoc:
		icon: "rdoc"
		scope: "rdoc"
		match: ".rdoc"
		colour: "medium-red"

	React:
		icon: "react"
		priority: 2
		match: [
			[/^react(-[^.]*)?\.[cm]?js$/i, "dark-blue"]
			[/\.react\.[cm]?js$/i, "auto-blue"]
		]

	Readme:
		icon: "book"
		match: [
			[/^README(\b|_)|^((un)?licen[sc]es?(\.mysql)?|(read|readme|click|delete|keep|test)\.me)(\.(md|txt))?$|\.(readme|1st|licen[sc]es?)$/i, "medium-blue", priority: 2]
			[/^(notice|bugs|changes|change[-_]?log([-._]?\d+)?|contribute|contributing|contributors|copy(ing|right)(\.regex)?|faq|fixes|hacking|history|install|maintainers|manifest|more\.stuff|notes|problems|projects|revision|terms|thanks|warnings)(_\w+)?$/i, "dark-blue", priority: 2]
			[/\b(changelog|copying(v?\d)?|install|read[-_]?me)\b|^licen[sc]es?[-._]/i, "medium-blue", priority: 0]
			[/^news([-_.]?[-\d]+)?$/i, "dark-blue", priority: 0]
			[/^zork\d\.(?!pre$|pur$)[a-z]+$/, "dark-blue", priority: 0]
			[/^zork\d\.doc$/, "medium-blue", priority: 2]
			[".changes", "medium-blue"]
			[".journal", "medium-blue", uses: "Ledger"]
			[".faq", "medium-blue"]
		]

	REALbasic:
		icon: "xojo"
		match: [
			[".rbbas", "medium-green"]
			[".rbfrm", "dark-green"]
			[".rbmnu", "dark-cyan"]
			[".rbres", "medium-cyan"]
			[".rbtbar", "medium-blue"]
			[".rbuistate", "dark-blue"]
		]

	Reason:
		icon: "reason"
		match: [
			[".re", "medium-red", "reason"]
			[".rei", "medium-orange"]
		]

	"Reason Studios":
		icon: "reasonstudios"
		match: [
			[".reason", "medium-orange"]
			[".rns", "dark-orange", signature: /^Propellerheads Reason Song File/]
			[".rsn", "medium-orange"]
			[".rx2", "medium-red"]
			[".sxt", "medium-yellow", mime: "audio/x-aiff", signature: /^FORM.{4}PTCH/]
		]

	Rebol:
		icon: "rebol"
		match: [
			[/\.reb(ol)?$/i, "dark-green", "rebol"]
			[".r2", "dark-red"]
			[".r3", "dark-blue"]
		]

	Red:
		icon: "red"
		match: [
			[".red", "medium-red", scope: "red", alias: "red/system"]
			[".reds", "light-red"]
		]

	"Red Hat":
		icon: "red-hat"
		match: [
			[/\.rpm(macros)?$/i, "medium-red"]
			[".spec", "dark-red"]
		]

	Reek:
		icon: "reek"
		match: ".reek"
		colour: "medium-red"

	RegExp:
		icon: "regex"
		match: /\.regexp?$/i
		colour: "medium-green"
		scope: /(\.|^)regexp?(\.|$)/i

	Renovate:
		icon: "renovate"
		match: /(?!^renovate$)(\.|^)renovate(rc)?(\.json)?$/i
		colour: "medium-cyan"
		priority: 2
		uses: "JSON"

	RequireJS:
		icon: "requirejs"
		priority: 2
		match: /^require([-.]min|dev)?\.[cm]?js$/i
		colour: "medium-blue"

	reStructuredText:
		icon: "rst"
		scope: "restructuredtext"
		alias: /^re?st$/i
		match: /\.re?st(\.txt)?$/i
		colour: "dark-blue"

	REXX:
		icon: "rexx"
		match: [
			[/\.rexx?$/i, "medium-red", scope: "rexx", interpreter: /rexx|regina/i]
			[".pprx", "medium-blue"]
		]

	Rhino3D:
		icon: "rhino"
		match: [
			[".3dm", "medium-blue"]
			[".rvb", "medium-green", "rhino"]
		]

	Riemann:
		icon: "clojure"
		priority: 2
		match: /^riemann\.config$/i
		colour: "auto-maroon"

	Ring:
		icon: "ring"
		match: ".ring"
		colour: "medium-purple"
		scope: "ring"

	RiotJS:
		icon: "riot"
		scope: "riot"
		match: ".tag"
		colour: "medium-red"

	RobotFramework:
		icon: "robot"
		match: ".robot"
		colour: "medium-cyan"

	Robots:
		icon: "robots"
		match: /^robots\.txt$/i
		colour: "dark-cyan"
		priority: 2

	Rollup:
		icon: "rollup"
		priority: 2
		match: /^rollup\.config\./i
		colour: "medium-red"

	Rouge:
		icon: "clojure"
		match: ".rg"
		colour: "medium-red"

	RSpec:
		icon: "rspec"
		match: ".rspec"
		colour: "medium-red"

	RSS:
		icon: "rss"
		match: ".rss"
		colour: "medium-orange"

	RStudio:
		icon: "rstudio"
		match: ".rproj"
		colour: "light-blue"

	Ruby:
		icon: "ruby"
		match: [
			[/\.(rb|ru|ruby|erb|gemspec|god|mspec|pluginspec|podspec|rabl|rake|opal)$/i, "medium-red"
				scope: "ruby"
				alias: /^(rbx?|rake|jruby|macruby)$/i
				interpreter: /(mac|j)?ruby|rake|rbx/]
			[/^\.?(irbrc|gemrc|pryrc|ruby-(gemset|version))$/i, "medium-red"]
			[/^(Appraisals|(Rake|App|[bB]uild|Cap|Danger|Deliver|Fast|Guard|Jar|Maven|Pod|Puppet|Snap)file(\.lock)?)$/, "medium-red"]
			[/\.(jbuilder|rbuild|rb[wx]|builder)$/i, "dark-red"]
			[/^rails$/, "medium-red"]
			[".watchr", "dark-yellow"]
		]

	Rubocop:
		icon: "rubocop"
		priority: 2
		match: /^\.rubocop(_todo)?\.ya?ml$/i
		colour: "dark-red"

	Rust:
		icon: "rust"
		match: [
			[".rs", "medium-maroon", "rust"]
			[".rlib", "light-maroon"]
			[/^rust-toolchain$/, "medium-red"]
		]

	SAC:
		icon: "sac"
		match: ".sac"
		colour: "medium-yellow"
		scope: "sac"

	San:
		icon: "san"
		match: ".san"
		colour: "medium-cyan"
		scope: "san"

	Safari:
		icon: "safari"
		generic: true
		match: [
			[".webarchive", "medium-blue", alias: "WebArchive"]
		]

	Sage:
		icon: "sage"
		match: [
			[".sage", "medium-blue", "sage"]
			[".sagews", "dark-blue"]
		]

	Sails:
		icon: "sails"
		match: /^\.sailsrc$/i
		colour: "medium-blue"
		uses: ["JSON", "INI"]

	SaltStack:
		icon: "saltstack"
		scope: "salt"
		alias: /^Salt(State)?$/i
		match: ".sls"
		colour: "auto-blue"

	SAS:
		icon: "sas"
		scope: "sas"
		match: ".sas"
		colour: "medium-blue"

	Sass:
		icon: "sass"
		match: [
			[".scss", "light-pink", "scss"]
			[".sass", "dark-pink", "sass"]
			[/^\.sassrc(\.[cm]?js)?$/i, "auto-yellow", priority: 2, uses: "JavaScript"]
		]

	SBT:
		icon: "sbt"
		match: ".sbt"
		colour: "dark-purple"

	Scala:
		icon: "scala"
		match: [
			[/\.(sc|scala)$/i, "medium-red", "scala"]
			[".kojo", "medium-green"]
		]

	Scheme:
		icon: "scheme"
		match: [
			[".scm", "medium-red", scope: "scheme", interpreter: /guile|bigloo|chicken/]
			[".sld", "medium-blue"]
			[".sps", "medium-purple"]
		]

	Scilla:
		icon: "scilla"
		match: ".scilla"
		colour: "medium-orange"
		scope: "scilla"

	Scilab:
		icon: "scilab"
		match: [
			[".sci", "dark-purple", "scilab"]
			[".sce", "dark-blue"]
			[".tst", "dark-cyan"]
		]

	Scratch:
		icon: "scratch"
		uses: "ZIP"
		match: [
			[".sb2", "dark-orange"]
			[".sb3", "medium-orange"]
		]

	Scrutinizer:
		icon: "scrutinizer"
		priority: 2
		match: ".scrutinizer.yml"
		colour: "dark-blue"

	Secret:
		icon: "secret"
		match: ".secret"

	Self:
		icon: "self"
		scope: "self"
		match: ".self"
		colour: "dark-blue"

	"Semantic Release":
		icon: "semrelease"
		priority: 2
		match: /^\.releaserc(\.(ya?ml|[cm]?js|json))?$/i
		colour: "medium-grey"

	Sencha:
		icon: "sencha"
		priority: 2
		match: /^sencha(\.min)?\.[cm]?js$/i
		colour: "light-green"

	Sentry:
		icon: "sentry"
		match: ".sentryclirc"
		colour: ["medium-red", "light-red"]

	"Seperated-value files":
		icon: "graph"
		generic: true
		match: [
			[".csv", "light-red", scope: /(^|\.)csv(\.semicolon)?(\.|$)/i]
			[/\.(tab|tsv)$/i, "light-green"]
			[".dif", "medium-green"]
			[".slk", "medium-cyan"]
			[".prn", "dark-blue"]
		]

	Serverless:
		icon: "serverless"
		match: /(^|\.)serverless\.ya?ml$/i
		colour: "medium-red"
		priority: 2

	"Service Fabric":
		icon: "sf"
		match: ".sfproj"
		colour: "light-orange"

	Sequelize:
		icon: "sequelize"
		match: /\.sequelizerc(\.[cm]?js|\.json)?$/i
		colour: "auto-blue"
		priority: 2

	"Silicon Graphics Image":
		icon: "sgi"
		match: /\.(sgi|iris)$/i
		colour: "medium-orange"
		signature: /^\x01Ú[\0-\x01]/

	"Shadow CLJS":
		icon: "shadowcljs"
		priority: 2
		match: /^shadow-cljs\.edn$/i
		colour: "auto-cyan"

	Shell:
		icon: "terminal"
		generic: true
		match: [
			[/\.(sh|rc|bats|bash|tool|install|command)$/i, "medium-purple"
				scope: "shell"
				alias: /^(sh|shell|Shell-?Script|Bash)$/i
				interpreter: /^([bd]ash|a?sh|zsh|rc)$/]
			[/^(\.?bash(rc|[-_]?(profile|login|logout|history|prompt))|_osc|config|install-sh|PKGBUILD)$/i, "dark-purple"]
			[/\.(ksh|mksh|pdksh)$/i, "dark-yellow"
				scope: "ksh-shell"
				interpreter: /^(ksh|mksh(-static)?|pdksh|lksh)$/i]
			[".sh-session", "auto-yellow"
				scope: "shell-session"
				alias: /^(Bash|Shell|Sh)[-\s]*(Session|Console)$/i]
			[/\.zsh(-theme|_history)?$|^\.?(antigen|zpreztorc|zlogin|zlogout|zprofile|zshenv|zshrc)$/i, "medium-blue"]
			[/\.fish$|^\.fishrc$/i, "medium-green", "fish"]
			[/^\.?(login|profile)$/, "medium-red"]
			[/^\.?_?dir_?colors$/i, "medium-green", "dircolors"]
			[".inputrc", "medium-red", alias: "Readline Config", scope: "inputrc"]
			[".tmux", "medium-blue"]
			[/^(configure|config\.(guess|rpath|status|sub)|depcomp|libtool|compile)$/, "medium-red"]
			[/^\/(private\/)?etc\/([^/]+\/)*(profile$|nanorc$|rc\.|csh\.)/i, "dark-purple", matchPath: true]
			[/^\.?cshrc$/i, "medium-orange"]
			[".profile", "dark-purple"]
			[".tcsh", "medium-green"]
			[".csh", "medium-yellow"]
		]

	Shen:
		icon: "shen"
		match: ".shen"
		colour: "dark-cyan"

	Shipit:
		icon: "shipit"
		priority: 2
		match: /^shipitfile(\b.+)?\.[cm]?js$/i
		colour: "medium-orange"

	Shippable:
		icon: "shippable"
		priority: 2
		match: /^shippable\.ya?ml$/i
		colour: "medium-cyan"

	Shopify:
		icon: "shopify"
		match: ".liquid"
		colour: "medium-green"

	Sieve:
		icon: "filter"
		match: ".sieve"
		colour: "medium-red"
		scope: "sieve"
		interpreter: "pigeonhole"
		mime: "application/sieve"

	Sigils:
		icon: "sigils"
		match: ".sigils"
		colour: "dark-red"

	SilverStripe:
		icon: "silverstripe"
		scope: /(^|\.)ss(template)?(\.|$)/i
		match: ".ss"
		colour: "medium-blue"

	Sketch:
		icon: "sketch"
		match: ".sketch"
		colour: "medium-orange"

	"SketchUp LayOut":
		icon: "sketchup-lo"
		match: ".layout"
		colour: "auto-red"

	"SketchUp Make":
		icon: "sketchup-mk"
		match: ".skp"
		colour: "medium-red"

	"SketchUp Style Builder":
		icon: "sketchup-sb"
		match: ".style"
		colour: "auto-red"

	Skipper:
		icon: "anchor"
		match: ".eskip"
		scope: "eskip"
		colour: "dark-blue"

	Slash:
		icon: "slash"
		scope: "slash"
		match: ".sl"
		colour: "dark-blue"

	Smarty:
		icon: "smarty"
		scope: "smarty"
		match: ".tpl"
		colour: "auto-yellow"

	Snapcraft:
		icon: "snapcraft"
		match: /^snapcraft\.ya?ml$/i
		colour: "dark-cyan"
		priority: 2
		uses: "YAML"

	"Snap SVG":
		icon: "snapsvg"
		priority: 2
		match: /^snap\.svg([-.]min)?\.[cm]?js$/i
		colour: "medium-cyan"

	Snort:
		icon: "snort"
		match: ".snort"
		colour: "light-red"
		scope: "snort"

	Snyk:
		icon: "snyk"
		match: ".snyk"
		colour: "dark-purple"

	Solidarity:
		icon: "solidarity"
		priority: 2
		match: /^\.solidarity(\.json)?$/i
		colour: "dark-red"

	Solidity:
		icon: "solidity"
		match: /\.sol(idity)?$/i
		scope: "solidity"
		colour: "dark-cyan"

	Sophia:
		icon: "sophia"
		match: ".aes"
		colour: "dark-pink"
		scope: "sophia"

	Sorbet:
		icon: "sorbet"
		match: ".rbi"
		colour: "auto-purple"
		uses: "Ruby"

	SourcePawn:
		icon: "clojure"
		match: [
			[/\.(sma|sp)$/i, "auto-yellow", scope: "sp", alias: "sourcemod"]
			[".inc", "medium-green"]
		]

	Spacemacs:
		icon: "spacemacs"
		match: /(^|\.)spacemacs$/i
		colour: "medium-purple"
		interpreter: "spacemacs"
		scope: "spacemacs"

	SPARQL:
		icon: "sparql"
		match: [
			[".sparql", "medium-blue", scope: "rq"]
			[".rq", "dark-blue"]
		]

	SquareSpace: # JSON Templates
		icon: "squarespace"
		match: ".jsont"
		scope: "jsont"
		colour: "dark-purple"
		alias: /^(json[-_]?t|json[-_\s]?template)$/i

	SQF:
		icon: "sqf"
		match: [
			[".sqf", "dark-maroon", "sqf"]
			[".hqf", "dark-red"]
		]

	SQL:
		icon: "sql"
		match: [
			[/\.(my)?sql$/i, "medium-orange", "sql"]
			[".ddl", "medium-blue"]
			[".udf", "medium-green"]
			[".hql", "medium-red"]
			[".viw", "dark-cyan"]
			[".prc", "dark-blue"]
			[".cql", "dark-blue"]
			[".db2", "medium-purple"]

# Informix 4GL
			[".4gl", "medium-blue", scope: /4GL(\.|$)/i]
			[".per", "medium-cyan"]
			[".spsql", "medium-green"]
		]

	SQLite:
		icon: "sqlite"
		match: [
			[".sqlite", "medium-blue"]
			[".sqlite3", "dark-blue", signature: /^SQLite format 3/]
			[".db", "medium-purple"]
			[".db3", "dark-purple"]
		]

	Squirrel:
		icon: "squirrel"
		match: [
			[".nut", "medium-maroon", scope: "nut"]
			[".gnut", "medium-red"]
		]

	"SSH keys":
		icon: "key"
		match: [
			[".pub", "medium-yellow"]
			[".pem", "medium-orange"]
			[".key", "medium-blue"]
			[".crt", "medium-blue"]
			[".der", "medium-purple"]
			[/^id_rsa/, "medium-red"]
			[/\.glyphs\d*License$/i, "medium-green"]
			[/^(master\.)?passwd$/i, "dark-green"]
			[/^git-credential-osxkeychain$/i, "medium-green"]
			[/\.ssh[\/\\][^/\\\s]+$/, "dark-blue", matchPath: true, priority: 0]
		]

	Stan:
		icon: "stan"
		scope: "stan"
		match: ".stan"
		colour: "medium-red"

	Stata:
		icon: "stata"
		match: [
			[".do", "medium-blue", "stata"]
			[".ado", "dark-blue"]
			[".doh", "light-blue"]
			[".ihlp", "medium-cyan"]
			[".mata", "dark-cyan", "mata"]
			[".matah", "light-cyan"]
			[".sthlp", "medium-purple"]
		]

	Stencil:
		icon: "stencil"
		match: ".stencil"
		colour: "medium-orange"
		scope: "stencil"

	StdlibJS:
		icon: "stdlibjs"
		priority: 2
		match: [
			[/^stdlib(-.+)?\.[cm]?js$/i, "medium-orange"]
			[/^stdlib(-.+)?\.[cm]?js\.gz$/i, "medium-blue"]
		]

	Storybook:
		icon: "storybook"
		priority: 2
		match: [
			[/\.(story|stories)\.([cm]?js|jsx)$/i, "medium-orange"]
			[/\.(story|stories)\.tsx?$/i, "medium-blue"]
		]

	Storyist:
		icon: "storyist"
		match: ".story"
		colour: "medium-blue"

	Strings:
		icon: "strings"
		scope: "strings"
		match: ".strings"
		colour: "medium-red"

	Stylable:
		icon: "stylable"
		match: ".st.css"
		colour: "medium-green"
		priority: 2

	StyledComponent:
		icon: "nailpolish"
		priority: 2
		match: [
			[".sc.js", "medium-yellow", scope: /^styled$/]
			[".sc.jsx", "auto-blue"]
			[".sc.mjs", "auto-blue"]
			[".sc.cjs", "auto-green"]
			[".sc.ts", "medium-blue"]
			[".sc.tsx", "light-blue"]
		]

	Stylelint:
		icon: "stylelint"
		priority: 2
		match: [
			[/^\.stylelintrc(\.|$)/i, "medium-purple"]
			[/^stylelint\.config\.[cm]?js$/i, "auto-yellow"]
			[/\.stylelint(ignore|cache)$/i, "dark-blue"]
		]

	"Stylish Haskell":
		icon: "stylishhaskell"
		priority: 2
		match: /^\.stylish-haskell\.ya?ml$/i
		colour: "medium-purple"

	Stylus:
		icon: "stylus"
		scope: "stylus"
		match: /\.(styl|stylus)$/i
		colour: "medium-green"

	"Sublime Text":
		icon: "sublime"
		match: [
			[/\.(stTheme|sublime[-_](build|commands|completions|keymap|macro|menu|mousemap|project|settings|theme|workspace|metrics|session|snippet))$/i, "medium-orange"]
			[".sublime-syntax", "dark-orange"]
		]

	SuperCollider:
		icon: "scd"
		scope: "supercollider"
		interpreter: /sclang|scsynth/
		match: ".scd"
		colour: "medium-red"

	SVG:
		icon: "svg"
		scope: "svg"
		match: ".svg"
		colour: "dark-yellow"

	Swagger:
		icon: "swagger"
		colour: "medium-green"
		match: [
			[/^(openapi|swagger)\.(json|yaml|yml)$/i, "medium-green", priority: 2]
			[".swagger-codegen-ignore", "dark-green"]
		]

	Swift:
		icon: "swift"
		scope: "swift"
		match: ".swift"
		colour: "medium-orange"

	Svelte:
		icon: "svelte"
		scope: "svelte"
		match: ".svelte"
		colour: "medium-orange"
		uses: "HTML"

	SystemVerilog:
		icon: "sysverilog"
		match: [
			[".sv", "auto-blue"]
			[".svh", "auto-green"]
			[".vh", "auto-cyan"]
		]

	"Table of Contents":
		icon: "toc"
		scope: "toc"
		priority: 2
		match: ".toc"
		colour: "auto-cyan"

	Tagfile: # CTags
		icon: "tag"
		match: [
			[/\.?c?tags$/i, "medium-blue"]
			[/\.gemtags/i, "medium-red"]
			[/\.hgtags$|^localtags$/i, "medium-cyan"]
			[/^\.atom-socket-.+\.\d$/, "medium-green", priority: 2]
			[".pid", "medium-orange"]
			[".tld", "medium-maroon", uses: "XML"]
			[/(\.|^)sha(256|sum)?$/i, "medium-green"]
		]

	Tailwind:
		icon: "tailwind"
		match: /^\.?tailwind(\.config)?\.([cm]?js|ts|coffee)$/i
		colour: "medium-cyan"
		priority: 2

	Tcl:
		icon: "tcl"
		match: [
			[".tcl", "dark-orange", scope: "tcl", interpreter: /tclsh|wish/]
			[".adp", "medium-orange"]
			[".tm", "medium-red"]
			[".exp", "dark-blue"]
			[/^\.tkcvs/i, "medium-cyan"]
			[/^\.tkdiffrc$/, "dark-red"]
		]

	Tea:
		icon: "coffee"
		scope: "tea"
		match: ".tea"
		colour: "medium-orange"

	"Team Foundation Server":
		icon: "tfs"
		match: ".tfignore"
		colour: "dark-purple"
		alias: "tfs"

	Telegram:
		icon: "telegram"
		match: [
			[".tl", "medium-blue", scope: "tl", alias: /Type\s*Language/i]
			[".xps", "light-blue"] # Microsoft XPS Viewer: Unrelated, but similar icon
		]

	"Template Toolkit":
		icon: "tt"
		match: [
			[/\.tt2?$/i, "medium-blue"]
			[".tt3", "medium-purple"]
		]

	Tern:
		icon: "tern"
		match: [
			[".tern-project", "medium-blue"]
			[".tern-config", "medium-purple"]
		]

	Terraform:
		icon: "terraform"
		match: [
			[/\.tf(vars)?$/i, "dark-purple", scope: /\.terra(form)?$/i]
			[".tf.json", "medium-yellow", priority: 2]
			[/\.tfstate(\.backup)?$/i, "medium-cyan"]
		]

	Terser:
		icon: "terser"
		match: /^\.(terser|uglify)rc(\.\w+)?$/i
		colour: "medium-orange"
		priority: 2

	"Test, CoffeeScript":
		icon: "test-coffee"
		match: /[._-](spec|test)s?\.((lit)?coffee|iced|cjsx)$/i
		colour: "auto-maroon"
		priority: 1.5

	"Test, Generic":
		icon: "test-generic"
		match: [
			[/([\\/])t\1t?\d+(?:(?!\1).)+\.sh$/i, "medium-green", matchPath: true, priority: 1.5]
			[".test", "medium-green", priority: 0.25]
			[".xspec", "dark-green"]
		]

	"Test, Go":
		icon: "test-go"
		match: /[._-](spec|test)s?\.go$/i
		colour: "auto-cyan"
		priority: 1.5

	"Test, Haskell":
		icon: "test-hs"
		match: /[._-](spec|test)s?\.(hsc?|c2hs|lhs)$/i
		colour: "auto-purple"
		priority: 1.5

	"Test, JavaScript":
		icon: "test-js"
		priority: 1.5
		match: [
			[/[._-](spec|test)s?\.([_s]?js|js[bms]|es\d*)$/i, "auto-yellow"]
			[/[._-](spec|test)s?\.mjs$/i, "auto-blue"]
			[/[._-](spec|test)s?\.cjs$/i, "auto-green"]
			[/([\\\/])(?:(spec|test)s?|t)\1(?:\d+[-.])+(?!-)[^.\\\/]+\.js$/i, "auto-yellow", matchPath: true]
			[/([\\\/])(?:(spec|test)s?|t)\1(?:\d+[-.])+(?!-)[^.\\\/]+\.mjs$/i, "auto-yellow", matchPath: true]
			[/([\\\/])(?:(spec|test)s?|t)\1(?:\d+[-.])+(?!-)[^.\\\/]+\.cjs$/i, "auto-yellow", matchPath: true]
		]

	"Test, Perl":
		icon: "test-perl"
		match: [
			[".t", "auto-blue"]
			[/([\\\x2F])t\1(?:(?!\1).)+\.t$/i, "auto-blue", priority: 1.5, matchPath: true]
			[/([\\\x2F])(test|spec)s?(\1((?!\1).)+)*\1((?!\1).)+[._-](spec|test)s?\.p(er)?l$/i, "auto-blue", priority: 1.5, matchPath: true]
		]

	"Test, Python":
		icon: "test-python"
		match: [
			[/[._-](spec|test)s?\.py(3|thon)?/i, "dark-blue", priority: 1.5]
			[/([\\\x2F])(test|spec)s?(\1((?!\1).)+)*\1(((?!\1).)+[._-](?:spec|test)s?|(?:spec|test)s?[._-].+)\.py(3|thon)?$/i, "dark-blue", priority: 1.5, matchPath: true]
		]

	"Test, React":
		icon: "test-react"
		priority: 1.5
		match: [
			[/[._-](spec|test)s?\.(jsx|react\.[cm]?js)$/, "auto-blue"]
			[/([\\\/])(spec|test)s?\1(?:\d+[-.])+(?!-)[^.\\\/]+\.(jsx|react\.[cm]?js)$/i, "auto-blue", matchPath: true]
		]

	"Test, Ruby":
		icon: "test-ruby"
		match: [
			[/[._-](spec|test)s?\.(rb|ruby)$/i, "auto-red", priority: 2]
			[/([\\\x2F])(t|tests?|specs?)\1+(?:(?!\1).)*\.(rb|ruby)$/, "auto-red", priority: 2, matchPath: true]
		]

	"Test, Rust":
		icon: "test-rust"
		match: /[._-](spec|test)s?\.rs$/i
		colour: "auto-maroon"
		priority: 1.5

	"Test, TypeScript":
		icon: "test-ts"
		priority: 1.5
		match: [
			[/[._-](spec|test)s?\.ts$/i, "auto-blue"]
			[/[._-](spec|test)s?\.tsx$/i, ["light-blue", "medium-blue"]]
			[/([\\\/])(spec|test)s?\1(?:\d+[-.])+(?!-)[^.\\\/]+\.ts$/i, "auto-blue", matchPath: true]
			[/([\\\/])(spec|test)s?\1(?:\d+[-.])+(?!-)[^.\\\/]+\.tsx$/i, ["light-blue", "medium-blue"], matchPath: true]
		]

	TeX:
		icon: "tex"
		match: [
			[".tex", "auto-blue", scope: /(^|\.)latex(\.|$)/i, alias: "latex"]
			[".ltx", "auto-blue"]
			[".aux", "auto-green"]
			[".sty", "auto-red", scope: /(^|\.)tex(\.|$)/i]
			[".dtx", "auto-maroon"]
			[".cls", "auto-orange"]
			[".ins", "auto-green"]
			[".lbx", "auto-blue"]
			[".mkiv", "auto-orange"]
			[".mkvi", "auto-orange"]
			[".mkii", "auto-orange"]
			[".pgf", "auto-purple", "pgf"]
			[".tikz", "auto-purple", "tikz"]
			[/\.(texi(nfo)?|txi)$/i, "auto-red", "texinfo"]
			[/^hyphen(ex)?\.(cs|den|det|fr|sv|us)$/, "auto-red", priority: 2]
		]

	Text:
		icon: "icon-file-text"
		noSuffix: true
		match: [
			[/\.te?xt$/i, "medium-blue", signature: /^\xEF\xBB\xBF|^\xFF\xFE/]
			[/\.log$|^Terminal[-_\s]Saved[-_\s]Output$/i, "medium-maroon"]
			[/\.git[\/\\]description$/, "dark-red", matchPath: true]
			[/(\\|\/)share(?:\1misc)?\1(?:operator|mail\.(?:tilde)?help)$/, "dark-red", matchPath: true]
			[/\.err$|\.std(err|out)$/i, "medium-red"]
			[".rtf", "dark-red"]
			[/\.i?nfo$/i, "dark-blue"]
			[".abt", "dark-purple"]
			[".ans", "dark-orange"]
			[".brf", "medium-maroon"]
			[".dri", "medium-blue"]
			[".etx", "medium-yellow"]
			[".irclog", "medium-blue"]
			[".more", "medium-purple"]
			[".msg", "medium-orange"]
			[".no", "medium-red"]
			[".rpt", "medium-maroon"]
			[".srt", "medium-purple", scope: "srt", alias: /^Sub-?Rip([-\s]*(Text|Sub-?titles?)){0,2}$/i]
			[".sub", "dark-purple"]
			[/^(bug-report|fdl|for-release|tests)$/i, "medium-red"]
			[/\.(utxt|utf8)$/i, "medium-cyan"]
			[".weechatlog", "medium-green"]
			[".uof", "dark-red"]
			[".uot", "medium-blue"]
			[".uos", "medium-green"]
			[".uop", "medium-purple"]
		]

	Textile:
		icon: "textile"
		scope: "textile"
		match: ".textile"
		colour: "medium-orange"

	TextMate:
		icon: "textmate"
		match: [
			[".tmcg", "medium-green", scope: "tmcg"]
			[".tmLanguage", "dark-purple"]
			[".tmCommand", "medium-blue"]
			[".tmPreferences", "dark-blue"]
			[".tmSnippet", "dark-orange"]
			[".tmTheme", "medium-pink"]
			[".tmMacro", "medium-maroon"]
			[".yaml-tmlanguage", "medium-orange"]
			[".JSON-tmLanguage", "medium-purple"]
		]

	Theme:
		icon: "icon-paintcan"
		noSuffix: true
		match: ".theme"
		colour: "medium-purple"

	Thor:
		icon: "thor"
		match: [
			[".thor", "medium-orange"]
			[/^Thorfile$/i, "dark-orange"]
		]

	"TI Graphics Calculator":
		icon: "calc"
		priority: 2
		match: /\.8x[pk](\.txt)?$/i
		colour: "medium-maroon"
		signature: /^\*\*TI[789]\d\*\*/

	Tipe:
		icon: "tipe"
		match: ".tipe"
		colour: "medium-cyan"

	"TLA+":
		icon: "tla"
		match: ".tla"
		colour: "medium-maroon"
		scope: "tla"

	tmux:
		icon: "tmux"
		match: /(\.|_|^)tmux\.conf$/i
		colour: "medium-green"
		priority: 2
		scope: "tmux"

	TOML:
		icon: "toml"
		match: ".toml"
		colour: "medium-green"
		scope: "toml"

	TortoiseSVN:
		icon: "tortoise"
		match: /^.tgitconfig$/i
		colour: "medium-red"

	Travis:
		icon: "travis"
		priority: 2
		match: /^\.travis/i
		colour: "medium-red"

	Truffle:
		icon: "truffle"
		priority: 2
		match: /^\.?truffle\.[cm]?js$/i
		colour: "auto-maroon"

	TSX: # React/Typescript
		icon: "tsx"
		scope: "tsx"
		match: ".tsx"
		colour: "light-blue"

	"TTCN-3":
		icon: "ttcn3"
		match: /\.ttcn3?$/i
		colour: "medium-blue"
		scope: "TTCN-3"

	Turing:
		icon: "turing"
		scope: "turing"
		match: ".tu"
		colour: "medium-red"

	Twig:
		icon: "twig"
		scope: "twig"
		match: ".twig"
		colour: "medium-green"

	TwineScript:
		icon: "twine"
		scope: "tw"
		match: ".tw"
		colour: "medium-blue"
		alias: "SugarCube"
		interpreter: /^(Twine|Twee)$/i

	TXL:
		icon: "txl"
		scope: "txl"
		match: ".txl"
		colour: "medium-orange"

	TypeDoc:
		icon: "typedoc"
		priority: 2
		match: /^typedoc\.json$/i
		colour: "dark-purple"

	TypeScript:
		icon: "ts"
		scope: "ts"
		alias: /^(ts|Type[-\s]*Script)$/i
		match: ".ts"
		colour: "medium-blue"
		interpreter: /\b(deno|tsc|ts-node)$/

	Typings:
		icon: "typings"
		priority: 2
		match: /^typings\.json$/i
		colour: "medium-maroon"

	TypoScript:
		icon: "typo3"
		match: /\.(typoscript|tsconfig)$/i
		colour: "medium-orange"
		alias: "typo3"

	V:
		icon: "v"
		priority: 0.9 # HACK
		match: [
			[".v", "medium-blue", scope: "v", interpreter: /^v$/i]
			[".vh", "dark-blue"]
		]

	V8:
		icon: "v8"
		match: [
			[/^([dv]8|v8[-_.][^.]*|mksnapshot|mkpeephole)$/i, "medium-blue", priority: 0]
			[/^\.v8flags\b/, "medium-blue"]
			[/^\.c8rc(\.json)?$/i, "dark-blue", priority: 2, interpreter: "c8", uses: "JSON"]
		]

	Vagrant:
		icon: "vagrant"
		match: /^Vagrantfile$/i
		colour: "medium-cyan"

	Vala:
		icon: "vala"
		match: [
			[".vala", "medium-purple", "vala"]
			[".vapi", "dark-purple"]
		]

	"Valve Source Engine":
		icon: "source"
		match: [
			[".bsp", "medium-orange", alias: "Binary Space Partition", signature: /^VBSP/]
			[".vpk", "medium-red", alias: /^Valve (Package|Pak)$/i, signature: /^4\x12\xAAU./]
			[".vtfx", "dark-red", signature: /^VTFX/]
			[".vmt", "medium-blue", alias: "Valve Material Type", scope: "vmt"]
			[".vtf", "dark-blue", alias: /^Valve Texture (File|Format)$/i, signature: /^VTF\0|^\0FTV/]
			[".vmf", "medium-maroon", alias: /^Valve Map (File|Format)$/i, uses: "XML"]
			[".res", "medium-cyan", alias: /^Resource List$/i]
		]

	VCL: # (Varnish Configuration Language)
		icon: "varnish"
		scope: /(^|\.)(varnish|vcl)(\.|$)/i
		match: ".vcl"
		colour: "dark-blue"

	Velocity:
		icon: "velocity"
		match: ".vm"
		colour: "dark-blue"
		scope: "velocity"

	Verilog:
		icon: "verilog"
		match: [
			[".v", "dark-green", scope: "verilog", interpreter: /^(vvp|iverilog)$/i]
			[".veo", "medium-red"]
		]

	VHDL:
		icon: "vhdl"
		match: [
			[".vhdl", "dark-green", "vhdl"]
			[".vhf", "dark-blue"]
			[".vhi", "medium-blue"]
			[".vho", "dark-purple"]
			[".vhs", "medium-purple"]
			[".vht", "dark-red"]
			[".vhw", "dark-orange"]
		]


	Vim:
		icon: "vim"
		match: [
			[/\.(vim|[gn]?vimrc)$/i, "medium-green", scope: "viml", alias: /^(VimL?|NVim|Vim\s*Script)$/i, interpreter: /Vim?/i]
			[/^[.gn_]?vim(rc|info)$/i, "dark-green"]
			[".vmb", "dark-green", alias: "Vimball", signature: /^UseVimball/m]
		]

	VirtualBox:
		icon: "virtualbox"
		match: [
			[".ova", "medium-blue"]
			[".ovf", "medium-purple"]
			[".vhd", "medium-green"]
			[".vhdx", "dark-green", signature: /^vhdxfile/]
			[".vbox_version", "auto-blue"]
			[/\.vbox(-prev)?$/i, "auto-blue"]
		]

	"Visual Studio":
		icon: "vs"
		match: [
			[/\.(vba?|fr[mx]|bas)$/i, "medium-blue", scope: "vbnet", alias: /^vb\.?net$/i]
			[".vbhtml", "medium-red"]
			[".vbs", "medium-green"]
			[".vsix", "medium-cyan"]
			[".csproj", "dark-blue"]
			[".vbproj", "dark-red"]
			[/\.vcx?proj(\.[-\w]+)*$/i, "dark-purple", priority: 2]
			[/\.vssettings(\.json)?$/i, "dark-green", priority: 2]
			[/\.vscodeignore(\.json)?$/i, "medium-blue", priority: 2]
			[".vstemplate", "medium-purple"]
			[".vsixmanifest", "dark-orange"]
			[".code-workspace", "dark-blue", uses: "JSON"]
			[".builds", "medium-maroon"]
			[".dbproj", "dark-purple"]
			[".lsproj", "light-cyan"]
			[".modelproj", "dark-red"]
			[".sln", "medium-orange"]
			[".njsproj", "light-red"]
			[".sqlproj", "medium-orange", uses: "XML"]
			[".vcxitems", "auto-purple"]
			[".wmaproj", "medium-maroon"]
		]

	VMware:
		icon: "vmware"
		match: [
			[".vmdk", "auto-orange"]
			[".nvram", "auto-blue"]
			[".vmsd", "medium-green"]
			[".vmsn", "medium-green"]
			[".vmss", "auto-blue"]
			[".vmtm", "auto-red"]
			[".vmx", "auto-orange"]
			[".vmxf", "auto-orange"]
		]

	VSTS:
		icon: "vsts"
		priority: 2
		match: /^\.vsts-ci\.ya?ml$/i
		colour: "medium-blue"

	Vue:
		icon: "vue"
		scope: "vue"
		match: [
			[".vue", "light-green"]
			[/^vue\.config\.[cm]?js$/i, "light-green", priority: 2]
		]

	Vyper:
		icon: "vyper"
		match: ".vy"
		colour: "medium-grey"
		interpreter: "vyper"
		scope: "vyper"

